#include <stdio.h>
#include <stdlib.h>

typedef struct par{
  int value;
  struct par *nextPar;
}par;

typedef struct impar{
  int value;
  struct impar *nextImpar;
}impar;

void listaPar(par **head, par **tail, num){
  par new = (par) malloc(sizeof(par));
  new->value = num;
  new->nextPar = NULL;
  
  if(*head==NULL){
    *head = new;
    *tail = new;
  }else{
    (*tail)->nextPar = new;
    *tail = new;
  }
}

void listaImpar(impar **head, impar **tail, num){
  impar new = (impar) malloc(sizeof(impar));
  new->value = num;
  new->nextImpar = NULL;
  
  if(*head==NULL){
    *head = new;
    *tail = new;
  }else{
    (*tail)->nextImpar = new;
    *tail = new;
  }
}

void printPar(par *head){
  par *aux = head;
  while(aux){
    printf("%d ", aux->value);
    aux = aux->nextPar;
  }
  
}

void printImpar(impar *head){
  impar *aux = head;
  while(aux){
    printf("%d ", aux->value);
    aux = aux->nextImpar;
  }
}

int main(void){
  par *headPar=NULL;
  par *tailPar = NULL;
  
  impar *headImpar=NULL;
  impar *tailImpar=NULL;
  
  int number;
  
  printf("Separador de Pares e ímpares\n");
  while(1){
    printf("Digite um valor: [0 para finalizar]: ");
    scanf("%d", &number);
    
    if (number == 0){
      break;
    }
    if (number%2==0){
      listaPar(&headPar, &tailPar, number);
    }else{
      listaImpar(&headImpar, &tailImpar, number);
    }
  }
  
  printf("Números pares: ");
  printPar(headPar);
  printf("Números ímpares: ");
  printImpar(headImpar);
  
}
